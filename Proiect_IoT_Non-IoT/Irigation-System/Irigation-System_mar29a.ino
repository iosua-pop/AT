#include "arduino_secrets.h"
/* 
  Sketch generated by the Arduino IoT Cloud Thing "Untitled"
  https://create.arduino.cc/cloud/things/580f33e9-3c5f-428c-91d4-8b56e8badf64 

  Arduino IoT Cloud Variables description

  The following variables are automatically generated and updated when changes are made to the Thing

  int stateHumidity;
  bool stateMotor;

  Variables which are marked as READ/WRITE in the Cloud Thing will also have functions
  which are called when their values are changed from the Dashboard.
  These functions are generated with the Thing and added at the end of this sketch.
*/

#include "thingProperties.h"

const int senzor = A0;        // pin senzor umiditate
const int releu = 7;          // pin motor/releu
const int prag = 20;

void setup() {
  // Initialize serial and wait for port to open:
  Serial.begin(115200);
  // This delay gives the chance to wait for a Serial Monitor without blocking if none is found
  delay(1500); 

  // Defined in thingProperties.h
  initProperties();

  // Connect to Arduino IoT Cloud
  ArduinoCloud.begin(ArduinoIoTPreferredConnection);
  
  /*
     The following function allows you to obtain more information
     related to the state of network and IoT Cloud connection and errors
     the higher number the more granular information you’ll get.
     The default is 0 (only errors).
     Maximum is 4
 */
  setDebugMessageLevel(2);
  ArduinoCloud.printDebugInfo();

  pinMode(releu, OUTPUT);
  digitalWrite(releu, LOW); // Asigurăm că motorul e oprit la început
}

void loop() {
  ArduinoCloud.update();
  // Your code here 
  // onStateMotorChange();
  
  // Citim senzorul de umiditate
  int valoare = analogRead(senzor);
  Serial.println(valoare);
  int outputValue = map(valoare, 503, 223, 0, 100); // ajustează dacă ai nevoie

  // Actualizăm variabila din cloud
  stateHumidity = outputValue;
  Serial.println("Umiditate: " + String(outputValue) + "%");

  // Automatizare
  if (outputValue < prag) {
    Serial.println("Pamant uscat. Se uda automat.");
    digitalWrite(releu, HIGH);
    delay(1500); // udare scurtă
    digitalWrite(releu, LOW);
  }
}

/*
  Since StateMotor is READ_WRITE variable, onStateMotorChange() is
  executed every time a new value is received from IoT Cloud.
*/
void onStateMotorChange()  {
  if (stateMotor) {
    Serial.println("Pornit din cloud.");
    digitalWrite(releu, HIGH);
    // delay(500); // udare
    // digitalWrite(releu, LOW);

    // // Oprire automată după udare
    // stateMotor = false;
  }
else
  {
    digitalWrite(releu, LOW);
  }
}

/*
  Since StateHumidity is READ_WRITE variable, onStateHumidityChange() is
  executed every time a new value is received from IoT Cloud.
*/
void onStateHumidityChange()  {
  // Add your code here to act upon StateHumidity change
}